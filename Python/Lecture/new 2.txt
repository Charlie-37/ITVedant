

class user():
    usercount = 0
    def __init__(self, name, gender, salary):
        self.name = name
        self.gender = gender
        self.salary = salary
        self.accnumber = "sbi@1"
        user.usercount+=1
         

    def showdetails(self):
        print(f"Name : {self.name.title()}")
        print(f"Gender : {self.gender.title()}")
        print(f"Salary : {self.salary}")


class bank(user):
    def __init__(self,name,gender,salary):
        super().__init__(name,gender,salary)
        self.__balance = 0
        
    def viewbal(self):
        return self.__balance
    
    def deposite(self,dpamu):
        self.__balance = self.__balance + dpamu
        return f"current Balance is : {self.__balance} "

    def withdraw(self,withd):
        if withd > self.__balance:
            return "InSufficient Balance"
        
        elif withd <= self.__balance and withd >= 100:
            self.__balance = self.__balance - withd
            return "Thank You Visit again"
        elif withd < 100:
            print("Please enter multiple of 100 \n Balance : {viewbal}")

    def amtf(self,amt,tfacc):
        if amt> self.__balance:
            return "Insufficient Balance"
        elif amt>=1:
            self.__balance = self.__balance - amt
            
            
        
            
        
        

obj1 = bank("sunil","male",20000)
obj1.deposite(5000)
print(obj1.viewbal())
obj1.withdraw(100)
print(obj1.viewbal())
        
		
		
		


# //*--- Employee Manager Develpoer Class-----*//

class Employees():
    empcount = 0
    incamt = 1.10

    def __init__(self,first,last,salary): 
        self.first = first
        self.last = last
        self.salary = salary
        self.email = f"{self.first.lower()}.{self.last.lower()}@itvedant.com"
        Employees.empcount+=1

    def increment(self):
        self.salary = self.salary * self.incamt
        return self.salary

    def fullname(self):
        return f"{self.first.title()} {self.last.title()}"


class Developer(Employees):
    incamt = 1.30
    def __init__(self, first, last, salary, prolang):
        super().__init__(first, last, salary)
        self.prolang = prolang



class Manager(Employees):
    def __init__(self, first, last, salary, employees=None):
        super().__init__(first, last, salary)
        if(employees is None):
            self.employees = []
        else:
            self.employees = employees

    def addemp(self, emp):
        if(emp not in self.employees):
            self.employees.append(emp)

    def removeemp(self, emp):
        if(emp in self.employees):
            self.employees.remove(emp)
    
    def printemp(self):
        for emp in self.employees:
            print(f"----> {emp.fullname()}")
       

emp1 = Employees("sunil", "bhave", 25000)
emp2 = Employees("bhavesh", "ainkar", 2200)
emp3 = Employees("Rutuja", "sawant", 10000)
emp4 = Employees("Mahesh", "bhat", 15000)
emp5 = Employees("suraj", "surwanshi", 45000)
emp6 = Employees("Tejas", "Jadhav", 75000)

print(emp6.increment())

dev1 = Developer("Dipali", "Bhangrath", 300000,"Python")
dev2 = Developer("Ruchita", "Gurav", 400000,"Java")

print(dev2.fullname())
print(dev2.email)
print(dev2.increment())



manag1 = Manager("Sapnil", "rajesh", 45222)
manag2 = Manager("Rahul", "kanojiya", 65222)

manag2.addemp(emp2)
manag2.addemp(emp1)
manag2.addemp(emp5) 
manag2.addemp(dev2) 

print(manag2.printemp())

manag2.removeemp(emp5)
print(manag2.printemp())
print(manag2.fullname())
print(manag2.increment())

update note set twoth=2,fivhun=4,twohun=6 where atm_id="101";

 insert into note values("101",2,4,6,18);

 select twoth,fivhun,twohun,onehun ,sum((2000*twoth)+(500*fivhun)+(200*twoth)+(100*onehun)) as total from note where atm_id="101";
+-------+--------+--------+--------+-------+
| twoth | fivhun | twohun | onehun | total |
+-------+--------+--------+--------+-------+
|     2 |      4 |      6 |     18 |  8200 |
+-------+--------+--------+--------+-------+
1 row in set (0.013 sec)